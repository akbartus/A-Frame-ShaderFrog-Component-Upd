{
  "id": 6249,
  "name": "Space Shader",
  "fragment": "precision highp float;\nprecision highp int;\nuniform vec3 baseColor;\nuniform float brightness;\nuniform float Star_Swamp_3D_version_1666777463393_371_scale;\nuniform float time;\nuniform vec3 color;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nfloat field(in vec3 p) \n                                {\n                                    float strength = 7. + .03 * log(1.e-6 + fract(sin(1.0) * 4373.11));\n                                    float accum = 0.;\n                                    float prev = 0.;\n                                    float tw = 0.;\n                                    for (int i = 0;\n i < 32; ++i) \n                                    {\n                                        float mag = dot(p, p);\n                                        p = abs(p) / mag + vec3(-.51, -.4, -1.3);\n                                        float w = exp(-float(i) / 7.);\n                                        accum += w * exp(-strength * pow(abs(mag - prev), 2.3));\n                                        tw += w;\n                                        prev = mag;\n                                    }\n                                    return max(0., 5. * accum / tw - .2);\n                                }\nvec3 nrand3(vec2 co) \n                                {\n                                    vec3 a = fract(cos(co.x * 8.3e-3 + co.y) * vec3(1.3e5, 4.7e5, 2.9e5));\n                                    vec3 b = fract(sin(co.x * 0.3e-3 + co.y) * vec3(8.1e5, 1.0e5, 0.1e5));\n                                    vec3 c = mix(a, b, 0.5);\n                                    return c;\n                                }\nvarying float vNoise;\nvec4 Star_Swamp_3D_version_1666777463393_371_main() \n                                {\n                                    vec4 Star_Swamp_3D_version_1666777463393_371_gl_FragColor = vec4(0.0);\n                                    vec3 pos = vPosition / Star_Swamp_3D_version_1666777463393_371_scale;\n                                    vec3 p = vec3(pos / 4.) + vec3(2., -1.3, -1.);\n                                    p += 0.18 * vec3(sin(1.0 / 16.), sin(1.0 / 12.), sin(1.0 / 128.));\n                                    vec3 p2 = vec3(pos / (4. + sin(1.0 * 0.11) * 0.2 + 0.2 + sin(1.0 * 0.15) * 0.3 + 0.4)) + vec3(2., -1.3, -1.);\n                                    p2 += 0.2 * vec3(sin(1.0 / 16.), sin(1.0 / 12.), sin(1.0 / 128.));\n                                    vec3 p3 = vec3(pos / (4. + sin(1.0 * 0.14) * 0.23 + 0.23 + sin(1.0 * 0.19) * 0.31 + 0.31)) + vec3(2., -1.3, -1.);\n                                    p3 += 0.25 * vec3(sin(1.0 / 16.), sin(1.0 / 12.), sin(1.0 / 128.));\n                                    float t = field(p);\n                                    float t2 = field(p2);\n                                    float t3 = field(p3);\n                                    float v = (1. - exp((abs(pos.x) - 1.) * 6.)) * (1. - exp((abs(pos.y) - 1.) * 6.)) * (1. - exp((abs(pos.z) - 1.) * 6.));\n                                    vec3 c1 = mix(.9, 1., v) * vec3(1.8 * t * t * t, 1.4 * t * t, t);\n                                    vec3 c2 = mix(.8, 1., v) * vec3(1.9 * t2 * t2 * t2, 1.8 * t2 * t2, t2);\n                                    vec3 c3 = mix(.8, 1., v) * vec3(1.4 * t3 * t3 * t3, 1.8 * t3 * t3, t3);\n                                    c1 *= baseColor;\n                                    c2 *= baseColor;\n                                    c3 *= baseColor;\n                                    Star_Swamp_3D_version_1666777463393_371_gl_FragColor = vec4(brightness * vec3(c1 * 0.7 + c2 * 0.9 + c3 * 0.1), 1.0);\n                                    return Star_Swamp_3D_version_1666777463393_371_gl_FragColor *= 1.0;\n                                }\nvec4 Big_Wiggles1666777604836_427_main() \n                                {\n                                    vec4 Big_Wiggles1666777604836_427_gl_FragColor = vec4(0.0);\n                                    Big_Wiggles1666777604836_427_gl_FragColor = vec4(color * clamp(vNoise, 0.0, 1.0), 1.0);\n                                    return Big_Wiggles1666777604836_427_gl_FragColor *= 1.0;\n                                }\nvoid main() \n                                {\n                                    gl_FragColor = (Star_Swamp_3D_version_1666777463393_371_main() + Big_Wiggles1666777604836_427_main());                                }\n",
  "vertex": "precision highp float;\nprecision highp int;\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform float Big_Wiggles1666777604836_427_scale;\nuniform float displacement;\nuniform float time;\nuniform float speed;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nvarying float vNoise;\nvec3 mod289(vec3 x) \n                                {\n                                    return x - floor(x * (1.0 / 289.0)) * 289.0;\n                                }\nvec4 mod289(vec4 x) \n                                {\n                                    return x - floor(x * (1.0 / 289.0)) * 289.0;\n                                }\nvec4 permute(vec4 x) \n                                {\n                                    return mod289(((x * 34.0) + 1.0) * x);\n                                }\nvec4 taylorInvSqrt(vec4 r) \n                                {\n                                    return 1.79284291400159 - 0.85373472095314 * r;\n                                }\nvec3 fade(vec3 t) \n                                {\n                                    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n                                }\nfloat cnoise(vec3 P) \n                                {\n                                    vec3 Pi0 = floor(P);\n                                    vec3 Pi1 = Pi0 + vec3(1.0);\n                                    Pi0 = mod289(Pi0);\n                                    Pi1 = mod289(Pi1);\n                                    vec3 Pf0 = fract(P);\n                                    vec3 Pf1 = Pf0 - vec3(1.0);\n                                    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n                                    vec4 iy = vec4(Pi0.yy, Pi1.yy);\n                                    vec4 iz0 = Pi0.zzzz;\n                                    vec4 iz1 = Pi1.zzzz;\n                                    vec4 ixy = permute(permute(ix) + iy);\n                                    vec4 ixy0 = permute(ixy + iz0);\n                                    vec4 ixy1 = permute(ixy + iz1);\n                                    vec4 gx0 = ixy0 * (1.0 / 7.0);\n                                    vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n                                    gx0 = fract(gx0);\n                                    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n                                    vec4 sz0 = step(gz0, vec4(0.0));\n                                    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n                                    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n                                    vec4 gx1 = ixy1 * (1.0 / 7.0);\n                                    vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n                                    gx1 = fract(gx1);\n                                    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n                                    vec4 sz1 = step(gz1, vec4(0.0));\n                                    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n                                    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n                                    vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\n                                    vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\n                                    vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\n                                    vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\n                                    vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\n                                    vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\n                                    vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\n                                    vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\n                                    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n                                    g000 *= norm0.x;\n                                    g010 *= norm0.y;\n                                    g100 *= norm0.z;\n                                    g110 *= norm0.w;\n                                    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n                                    g001 *= norm1.x;\n                                    g011 *= norm1.y;\n                                    g101 *= norm1.z;\n                                    g111 *= norm1.w;\n                                    float n000 = dot(g000, Pf0);\n                                    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n                                    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n                                    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n                                    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n                                    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n                                    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n                                    float n111 = dot(g111, Pf1);\n                                    vec3 fade_xyz = fade(Pf0);\n                                    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n                                    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n                                    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n                                    return 2.2 * n_xyz;\n                                }\nvec4 Star_Swamp_3D_version_1666777463393_371_main() \n                                {\n                                    vec4 Star_Swamp_3D_version_1666777463393_371_gl_Position = vec4(0.0);\n                                    vUv = uv;\n                                    vPosition = position;\n                                    vNormal = normal;\n                                    Star_Swamp_3D_version_1666777463393_371_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                    return Star_Swamp_3D_version_1666777463393_371_gl_Position *= 1.0;\n                                }\nvec4 Big_Wiggles1666777604836_427_main() \n                                {\n                                    vec4 Big_Wiggles1666777604836_427_gl_Position = vec4(0.0);\n                                    vNoise = cnoise(normalize(position) * Big_Wiggles1666777604836_427_scale + (time * speed));\n                                    vec3 pos = position + normal * vNoise * vec3(displacement);\n                                    Big_Wiggles1666777604836_427_gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n                                    return Big_Wiggles1666777604836_427_gl_Position *= 1.0;\n                                }\nvoid main() \n                                {\n                                    gl_Position = Star_Swamp_3D_version_1666777463393_371_main() + Big_Wiggles1666777604836_427_main();                                }\n",
  "uniforms": {
    "baseColor": {
      "value": {
        "r": 0.023529411764705882,
        "g": 0.11764705882352941,
        "b": 0.13725490196078433
      },
      "type": "c",
      "glslType": "vec3"
    },
    "brightness": {
      "value": "2.5",
      "type": "f",
      "glslType": "float"
    },
    "time": {
      "type": "f",
      "glslType": "float"
    },
    "Star_Swamp_3D_version_1666777463393_371_scale": {
      "value": "3.11662184",
      "type": "f",
      "glslType": "float"
    },
    "displacement": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "speed": {
      "value": "0.2",
      "type": "f",
      "glslType": "float"
    },
    "color": {
      "value": {
        "r": 0.21568627450980393,
        "g": 1,
        "b": 0
      },
      "type": "c",
      "glslType": "vec3"
    },
    "Big_Wiggles1666777604836_427_scale": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    }
  },
  "url": "http://shaderfrog.com/app/view/6249",
  "user": {
    "username": "Jarne_H",
    "url": "http://shaderfrog.com/app/profile/andrewray"
  }
}